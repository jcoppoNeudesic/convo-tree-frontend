{"ast":null,"code":"var _jsxFileName = \"/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/App.tsx\";\nimport { Component } from 'react';\nimport './App.css';\nimport BoardState from './enums/BoardState';\nimport Board from './components/Board';\nimport PostCreateForm from './components/PostCreateForm'; // import samplePosts from './SamplePosts';\n\nimport Color from './utils/Color';\nimport postService from './services/PostsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      boardState: BoardState.Reading,\n      postClickedId: '',\n      postColor: Color.randomLightColor(),\n      newPost_X: 0,\n      newPost_Y: 0\n    };\n\n    this.getAllPosts = () => {\n      postService.get().then(json => {\n        const posts = json.map(post => {\n          return {\n            id: post._id,\n            parentPostId: post.parentPostId || '',\n            user: post.user,\n            date: post.createdAt,\n            message: post.message,\n            color: post.color,\n            x: post.x,\n            y: post.y\n          };\n        });\n        this.setState({\n          posts: posts\n        });\n      }).catch(err => {\n        console.log('err', err);\n      });\n    };\n\n    this.postClicked = id => {\n      this.setState({\n        boardState: BoardState.SelectingLocation,\n        postClickedId: id\n      });\n    };\n\n    this.presentPostCreateForm = (x, y) => {\n      this.setState({\n        boardState: BoardState.WritingPost,\n        newPost_X: x,\n        newPost_Y: y\n      });\n    };\n\n    this.createPostSubitted = message => {\n      const newPost = {\n        parentPostId: this.state.postClickedId,\n        user: 'Myself',\n        message: message,\n        color: this.state.postColor,\n        x: this.state.newPost_X - 80,\n        y: this.state.newPost_Y - 30\n      }; // let posts = this.state.posts;\n      // posts.push(newPost);\n\n      this.setState({\n        // posts: posts,\n        boardState: BoardState.Reading\n      });\n      postService.create(newPost).then(post => {\n        this.getAllPosts();\n      });\n    };\n\n    this.cancelPost = () => {\n      this.setState({\n        boardState: BoardState.Reading\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getAllPosts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        boardState: this.state.boardState,\n        posts: this.state.posts,\n        postClicked: this.postClicked,\n        postCreate: this.presentPostCreateForm,\n        postColor: this.state.postColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"The Big Bulletin Board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), this.state.boardState === BoardState.WritingPost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-form-container\",\n          children: /*#__PURE__*/_jsxDEV(PostCreateForm, {\n            onSubmit: this.createPostSubitted,\n            onCancel: this.cancelPost,\n            color: this.state.postColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/App.tsx"],"names":["Component","BoardState","Board","PostCreateForm","Color","postService","App","state","posts","boardState","Reading","postClickedId","postColor","randomLightColor","newPost_X","newPost_Y","getAllPosts","get","then","json","map","post","id","_id","parentPostId","user","date","createdAt","message","color","x","y","setState","catch","err","console","log","postClicked","SelectingLocation","presentPostCreateForm","WritingPost","createPostSubitted","newPost","create","cancelPost","componentDidMount","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport './App.css';\nimport BoardState from './enums/BoardState';\nimport Post from './models/Post';\nimport PostRequest from './models/PostRequest';\nimport PostResponse from './models/PostResponse';\nimport Board from './components/Board';\nimport PostCreateForm from './components/PostCreateForm';\n// import samplePosts from './SamplePosts';\nimport Color from './utils/Color';\nimport postService from './services/PostsService'\n\ntype AppState = {\n  posts: Post[],\n  boardState: BoardState,\n  postClickedId: string,\n  postColor: string,\n  newPost_X: number,\n  newPost_Y: number,\n}\n\nexport default class App extends Component {\n\n  state: AppState = {\n    posts: [],\n    boardState: BoardState.Reading,\n    postClickedId: '',\n    postColor: Color.randomLightColor(),\n    newPost_X: 0,\n    newPost_Y: 0\n  }\n\n  componentDidMount() {\n    this.getAllPosts();\n  }\n\n  getAllPosts = () => {\n    postService.get()\n      .then((json: any) => {\n        const posts: Post[] = json.map((post: PostResponse) => {\n          return {\n            id: post._id,\n            parentPostId: post.parentPostId || '',\n            user: post.user,\n            date: post.createdAt,\n            message: post.message,\n            color: post.color,\n            x: post.x,\n            y: post.y\n          }\n        })\n\n        this.setState({ posts: posts })\n      })\n      .catch(err => {\n        console.log('err', err);\n      })\n  }\n\n  postClicked = (id: string) => {\n    this.setState({\n      boardState: BoardState.SelectingLocation,\n      postClickedId: id\n    });\n  }\n\n  presentPostCreateForm = (x: number, y: number) => {\n    this.setState({\n      boardState: BoardState.WritingPost,\n      newPost_X: x,\n      newPost_Y: y\n    });\n  }\n\n  createPostSubitted = (message: string) => {\n    const newPost: PostRequest = {\n      parentPostId: this.state.postClickedId,\n      user: 'Myself',\n      message: message,\n      color: this.state.postColor,\n      x: this.state.newPost_X - 80,\n      y: this.state.newPost_Y - 30,\n    }\n\n    // let posts = this.state.posts;\n    // posts.push(newPost);\n    this.setState({\n      // posts: posts,\n      boardState: BoardState.Reading,\n    })\n\n    postService.create(newPost).then(post => {\n      this.getAllPosts();\n    });\n  }\n\n  cancelPost = () => {\n    this.setState({ boardState: BoardState.Reading })\n  }\n\n  render() {\n    return <div>\n      <Board\n        boardState={this.state.boardState}\n        posts={this.state.posts}\n        postClicked={this.postClicked}\n        postCreate={this.presentPostCreateForm}\n        postColor={this.state.postColor}\n      />\n      <div className=\"ui-overlay\">\n        <div>\n          <h1>The Big Bulletin Board</h1>\n          <div className=\"header-bar\" />\n        </div>\n        {this.state.boardState === BoardState.WritingPost && (\n          <div className='comment-form-container'>\n            <PostCreateForm\n              onSubmit={this.createPostSubitted}\n              onCancel={this.cancelPost}\n              color={this.state.postColor}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  }\n}"]},"metadata":{},"sourceType":"module"}