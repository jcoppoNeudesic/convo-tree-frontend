{"ast":null,"code":"/**\n * distance between two points\n */var pointDistance=function pointDistance(x1,y1,x2,y2){var sideA=x2-x1;var sideB=y2-y1;return Math.sqrt(Math.pow(sideA,2)+Math.pow(sideB,2));};/**\n * angle between two points in radians\n */var pointAngleRadians=function pointAngleRadians(x1,y1,x2,y2){return Math.atan2(y2-y1,x2-x1);};/**\n * angle between two points in degrees\n */var pointAngleDegrees=function pointAngleDegrees(x1,y1,x2,y2){return Math.atan2(y2-y1,x2-x1)*180/Math.PI;};var methods={pointDistance:pointDistance,pointAngleRadians:pointAngleRadians,pointAngleDegrees:pointAngleDegrees};export default methods;","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/utils/Geometry.ts"],"names":["pointDistance","x1","y1","x2","y2","sideA","sideB","Math","sqrt","pow","pointAngleRadians","atan2","pointAngleDegrees","PI","methods"],"mappings":"AAAA;AACA;AACA,GACA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,CAAaC,EAAb,CAAyBC,EAAzB,CAAqCC,EAArC,CAA4D,CAC9E,GAAMC,CAAAA,KAAK,CAAGF,EAAE,CAAGF,EAAnB,CACA,GAAMK,CAAAA,KAAK,CAAGF,EAAE,CAAGF,EAAnB,CACA,MAAOK,CAAAA,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASJ,KAAT,CAAgB,CAAhB,EAAqBE,IAAI,CAACE,GAAL,CAASH,KAAT,CAAgB,CAAhB,CAA/B,CAAP,CACH,CAJD,CAMA;AACA;AACA,GACA,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACT,EAAD,CAAaC,EAAb,CAAyBC,EAAzB,CAAqCC,EAArC,CAA4D,CAClF,MAAOG,CAAAA,IAAI,CAACI,KAAL,CAAWP,EAAE,CAAGF,EAAhB,CAAoBC,EAAE,CAAGF,EAAzB,CAAP,CACH,CAFD,CAIA;AACA;AACA,GACA,GAAMW,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACX,EAAD,CAAaC,EAAb,CAAyBC,EAAzB,CAAqCC,EAArC,CAA4D,CAClF,MAAOG,CAAAA,IAAI,CAACI,KAAL,CAAWP,EAAE,CAAGF,EAAhB,CAAoBC,EAAE,CAAGF,EAAzB,EAA+B,GAA/B,CAAqCM,IAAI,CAACM,EAAjD,CACH,CAFD,CAIA,GAAMC,CAAAA,OAAO,CAAG,CAAEd,aAAa,CAAbA,aAAF,CAAiBU,iBAAiB,CAAjBA,iBAAjB,CAAoCE,iBAAiB,CAAjBA,iBAApC,CAAhB,CACA,cAAeE,CAAAA,OAAf","sourcesContent":["/**\n * distance between two points\n */\nconst pointDistance = (x1: number, y1: number, x2: number, y2: number): number => {\n    const sideA = x2 - x1;\n    const sideB = y2 - y1;\n    return Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n}\n\n/**\n * angle between two points in radians\n */\nconst pointAngleRadians = (x1: number, y1: number, x2: number, y2: number): number => {\n    return Math.atan2(y2 - y1, x2 - x1);\n}\n\n/**\n * angle between two points in degrees\n */\nconst pointAngleDegrees = (x1: number, y1: number, x2: number, y2: number): number => {\n    return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\n}\n\nconst methods = { pointDistance, pointAngleRadians, pointAngleDegrees };\nexport default methods;"]},"metadata":{},"sourceType":"module"}