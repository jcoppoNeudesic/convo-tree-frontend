{"ast":null,"code":"var _jsxFileName = \"/Users/jayson.coppoNeudesic.com/Documents/Projects/Big-bulletin-board/big-bulletin-board-ts/src/components/LineView.tsx\";\nimport Geometry from '../utils/Geometry';\nimport \"./LineView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LineView = ({\n  x1,\n  y1,\n  x2,\n  y2\n}) => {\n  const distance = Geometry.pointDistance(x1, y1, x2, y2);\n  const angle = Geometry.pointAngleDegrees(x1, y1, x2, y2);\n  const mid_X = (x1 + x2) / 2;\n  const mid_Y = (y1 + y2) / 2;\n\n  const lineLeft = () => {\n    return mid_X - distance / 2;\n  };\n\n  const lineTop = () => {\n    return mid_Y / 2;\n  };\n\n  const lineTransform = () => {\n    return `rotate(${angle}deg)`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line\",\n    style: {\n      left: lineLeft(),\n      top: lineTop(),\n      width: distance,\n      transform: `rotate(${Geometry.pointAngleDegrees(x1, y1, x2, y2)}deg)`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LineView;\nexport default LineView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineView\");","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Documents/Projects/Big-bulletin-board/big-bulletin-board-ts/src/components/LineView.tsx"],"names":["Geometry","LineView","x1","y1","x2","y2","distance","pointDistance","angle","pointAngleDegrees","mid_X","mid_Y","lineLeft","lineTop","lineTransform","left","top","width","transform"],"mappings":";AACA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAO,gBAAP;;;AASA,MAAMC,QAA2B,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,EAAN;AAAUC,EAAAA,EAAV;AAAcC,EAAAA;AAAd,CAAD,KAAwB;AAExD,QAAMC,QAAQ,GAAGN,QAAQ,CAACO,aAAT,CAAuBL,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,CAAjB;AACA,QAAMG,KAAK,GAAGR,QAAQ,CAACS,iBAAT,CAA2BP,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,CAAd;AACA,QAAMK,KAAK,GAAG,CAACR,EAAE,GAAGE,EAAN,IAAY,CAA1B;AACA,QAAMO,KAAK,GAAG,CAACR,EAAE,GAAGE,EAAN,IAAY,CAA1B;;AAEA,QAAMO,QAAQ,GAAG,MAAc;AAC3B,WAAOF,KAAK,GAAIJ,QAAQ,GAAG,CAA3B;AACH,GAFD;;AAIA,QAAMO,OAAO,GAAG,MAAc;AAC1B,WAAOF,KAAK,GAAG,CAAf;AACH,GAFD;;AAIA,QAAMG,aAAa,GAAG,MAAc;AAChC,WAAQ,UAASN,KAAM,MAAvB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AACzBO,MAAAA,IAAI,EAAEH,QAAQ,EADW;AAEzBI,MAAAA,GAAG,EAAEH,OAAO,EAFa;AAGzBI,MAAAA,KAAK,EAAEX,QAHkB;AAIzBY,MAAAA,SAAS,EAAG,UAASlB,QAAQ,CAACS,iBAAT,CAA2BP,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,CAA2C;AAJvC;AAA7B;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA5BD;;KAAMJ,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import { FC } from 'react';\nimport Geometry from '../utils/Geometry';\nimport \"./LineView.css\"\n\ntype LineViewProps = {\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number\n}\n\nconst LineView: FC<LineViewProps> = ({ x1, y1, x2, y2 }) => {\n\n    const distance = Geometry.pointDistance(x1, y1, x2, y2);\n    const angle = Geometry.pointAngleDegrees(x1, y1, x2, y2);\n    const mid_X = (x1 + x2) / 2\n    const mid_Y = (y1 + y2) / 2\n\n    const lineLeft = (): number => {\n        return mid_X - (distance / 2);\n    }\n\n    const lineTop = (): number => {\n        return mid_Y / 2\n    }\n\n    const lineTransform = (): string => {\n        return `rotate(${angle}deg)`\n    }\n\n    return (\n        <div className='line' style={{\n            left: lineLeft(),\n            top: lineTop(),\n            width: distance,\n            transform: `rotate(${Geometry.pointAngleDegrees(x1, y1, x2, y2)}deg)`\n        }}>\n        </div>\n    );\n}\n\nexport default LineView;"]},"metadata":{},"sourceType":"module"}