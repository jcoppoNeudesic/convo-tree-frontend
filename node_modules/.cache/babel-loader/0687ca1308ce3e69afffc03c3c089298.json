{"ast":null,"code":"var _jsxFileName = \"/Users/jayson.coppoNeudesic.com/Documents/Projects/Big-bulletin-board/big-bulletin-board-ts/src/components/Board.tsx\";\nimport { Component } from 'react';\nimport \"./Board.css\";\nimport PostView from './PostView';\nimport LineView from './LineView';\nimport BoardState from '.././enums/BoardState';\nimport Geometry from '../utils/Geometry'; // import PostConnectionLine from './PostConnectionLine';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mouse_X: 0,\n      mouse_Y: 0,\n      clickedPost_X: 0,\n      clickedPost_Y: 0,\n      newPost_X: 0,\n      newPost_Y: 0\n    };\n\n    this.getConnectionLines = () => {\n      let lines = [];\n      this.props.posts.forEach((post, i) => {\n        const parentPost = this.findPost(post.parentPostId);\n\n        if (parentPost) {\n          const line = /*#__PURE__*/_jsxDEV(LineView, {\n            x1: parentPost.x,\n            y1: parentPost.y,\n            x2: post.x,\n            y2: post.y\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 30\n          }, this);\n\n          const lineLength = Geometry.pointDistance(post.x, post.y, parentPost.x, parentPost.y);\n          const lineLeft = (parentPost.x + 90 + post.x + 90) / 2 - lineLength / 2;\n          const lineTop = (post.y + 40 + parentPost.y + 40) / 2;\n          const lineAngle = Geometry.pointAngleDegrees(parentPost.x + 90, parentPost.y + 40, post.x + 90, post.y + 40);\n          let newLine = {\n            left: lineLeft,\n            top: lineTop,\n            width: lineLength,\n            transform: `rotate(${lineAngle}deg)`\n          };\n          lines.push(newLine);\n        }\n      });\n      return lines;\n    };\n\n    this.boardClicked = () => {\n      if (this.props.boardState === BoardState.SelectingLocation) {\n        this.setState({\n          newPost_X: this.state.mouse_X,\n          newPost_Y: this.state.mouse_Y\n        });\n        this.props.postCreate(this.state.mouse_X, this.state.mouse_Y);\n      }\n    };\n\n    this.handleMouseMove = e => {\n      let {\n        clientX,\n        clientY\n      } = e.nativeEvent;\n      this.setState({\n        mouse_X: clientX,\n        mouse_Y: clientY\n      });\n    };\n\n    this.postClicked = post => {\n      if (this.props.boardState === BoardState.Reading) {\n        this.props.postClicked(post.id);\n        this.setState({\n          clickedPost_X: post.x + 90,\n          clickedPost_Y: post.y + 40\n        });\n      }\n    };\n\n    this.findPost = id => {\n      return this.props.posts.find(post => post.id === id);\n    };\n  }\n\n  render() {\n    const {\n      clickedPost_X,\n      clickedPost_Y,\n      newPost_X,\n      newPost_Y,\n      mouse_X,\n      mouse_Y\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      onClick: this.boardClicked,\n      onMouseMove: this.handleMouseMove,\n      children: [this.props.posts.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(PostView, {\n          post: post,\n          handleClick: this.postClicked\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 28\n        }, this);\n      }), this.props.posts.map((post, i) => {\n        const parentPost = this.findPost(post.parentPostId);\n\n        if (parentPost) {\n          return /*#__PURE__*/_jsxDEV(LineView, {\n            x1: parentPost.x + 90,\n            y1: parentPost.y + 40,\n            x2: post.x + 90,\n            y2: post.y + 40\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 32\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.props.boardState === BoardState.SelectingLocation ? '' : 'hidden',\n        children: /*#__PURE__*/_jsxDEV(LineView, {\n          x1: clickedPost_X,\n          y1: clickedPost_Y,\n          x2: mouse_X,\n          y2: mouse_Y\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.props.boardState === BoardState.WritingPost ? 'connection-line' : 'hidden',\n        children: /*#__PURE__*/_jsxDEV(LineView, {\n          x1: clickedPost_X,\n          y1: clickedPost_Y,\n          x2: newPost_X,\n          y2: newPost_Y\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.props.boardState !== BoardState.Reading ? 'post-cursor-box' : 'hidden',\n        style: {\n          left: this.props.boardState === BoardState.SelectingLocation ? this.state.mouse_X - 30 : this.state.newPost_X - 30,\n          top: this.props.boardState === BoardState.SelectingLocation ? this.state.mouse_Y - 30 : this.state.newPost_Y - 30,\n          backgroundColor: this.props.postColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Documents/Projects/Big-bulletin-board/big-bulletin-board-ts/src/components/Board.tsx"],"names":["Component","PostView","LineView","BoardState","Geometry","Board","state","mouse_X","mouse_Y","clickedPost_X","clickedPost_Y","newPost_X","newPost_Y","getConnectionLines","lines","props","posts","forEach","post","i","parentPost","findPost","parentPostId","line","x","y","lineLength","pointDistance","lineLeft","lineTop","lineAngle","pointAngleDegrees","newLine","left","top","width","transform","push","boardClicked","boardState","SelectingLocation","setState","postCreate","handleMouseMove","e","clientX","clientY","nativeEvent","postClicked","Reading","id","find","render","map","WritingPost","backgroundColor","postColor"],"mappings":"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","sourcesContent":["import { Component, MouseEvent } from 'react';\nimport \"./Board.css\"\nimport PostView from './PostView';\nimport LineView from './LineView';\nimport Post from '../models/Post';\nimport BoardState from '.././enums/BoardState';\nimport Geometry from '../utils/Geometry'\n// import PostConnectionLine from './PostConnectionLine';\n\ntype BoardProps = {\n    boardState: BoardState,\n    posts: Post[],\n    postClicked: (id: number) => void,\n    postCreate: (x: number, y: number) => void,\n    postColor: string\n}\n\ntype BoardCompState = {\n    mouse_X: number,\n    mouse_Y: number,\n    clickedPost_X: number,\n    clickedPost_Y: number,\n    newPost_X: number,\n    newPost_Y: number\n}\n\ntype LineStyle = {\n    left: number,\n    top: number,\n    width: number,\n    transform: string\n}\n\nexport default class Board extends Component<BoardProps, BoardCompState> {\n    state: BoardCompState = {\n        mouse_X: 0,\n        mouse_Y: 0,\n        clickedPost_X: 0,\n        clickedPost_Y: 0,\n        newPost_X: 0,\n        newPost_Y: 0\n    }\n\n    getConnectionLines = () => {\n        let lines: any = [];\n        this.props.posts.forEach((post, i) => {\n            const parentPost = this.findPost(post.parentPostId);\n            if (parentPost) {\n\n                const line = <LineView x1={parentPost.x} y1={parentPost.y} x2={post.x} y2={post.y} />\n\n                const lineLength = Geometry.pointDistance(post.x, post.y, parentPost.x, parentPost.y)\n                const lineLeft = ((parentPost.x + 90 + post.x + 90) / 2) - (lineLength / 2);\n                const lineTop = (post.y + 40 + parentPost.y + 40) / 2;\n                const lineAngle = Geometry.pointAngleDegrees(parentPost.x + 90, parentPost.y + 40, post.x + 90, post.y + 40);\n                let newLine = {\n                    left: lineLeft,\n                    top: lineTop,\n                    width: lineLength,\n                    transform: `rotate(${lineAngle}deg)`\n                }\n                lines.push(newLine);\n            }\n        })\n        return lines;\n    }\n\n    boardClicked = () => {\n        if (this.props.boardState === BoardState.SelectingLocation) {\n            this.setState({\n                newPost_X: this.state.mouse_X,\n                newPost_Y: this.state.mouse_Y\n            })\n            this.props.postCreate(this.state.mouse_X, this.state.mouse_Y);\n        }\n    }\n\n    handleMouseMove = (e: MouseEvent) => {\n        let { clientX, clientY } = e.nativeEvent;\n        this.setState({\n            mouse_X: clientX,\n            mouse_Y: clientY\n        })\n    }\n\n    postClicked = (post: Post) => {\n        if (this.props.boardState === BoardState.Reading) {\n            this.props.postClicked(post.id);\n\n            this.setState({\n                clickedPost_X: post.x + 90,\n                clickedPost_Y: post.y + 40\n            });\n        }\n    }\n\n    findPost = (id?: number): Post | undefined => {\n        return this.props.posts.find(post => post.id === id);\n    }\n\n    render() {\n        const { clickedPost_X, clickedPost_Y, newPost_X, newPost_Y, mouse_X, mouse_Y } = this.state;\n        return (\n            <div className=\"board\" onClick={this.boardClicked} onMouseMove={this.handleMouseMove}>\n                {this.props.posts.map((post, i) => {\n                    return <PostView key={i} post={post} handleClick={this.postClicked} />\n                })}\n                {this.props.posts.map((post, i) => {\n                    const parentPost = this.findPost(post.parentPostId);\n                    if (parentPost) {\n                        return <LineView key={i} x1={parentPost.x + 90} y1={parentPost.y + 40} x2={post.x + 90} y2={post.y + 40} />\n                    }\n                })}\n                <div className={this.props.boardState === BoardState.SelectingLocation ? '' : 'hidden'}>\n                    <LineView x1={clickedPost_X} y1={clickedPost_Y} x2={mouse_X} y2={mouse_Y} />\n                </div>\n                <div className={this.props.boardState === BoardState.WritingPost ? 'connection-line' : 'hidden'}>\n                    <LineView x1={clickedPost_X} y1={clickedPost_Y} x2={newPost_X} y2={newPost_Y} />\n                </div>\n                <div\n                    className={this.props.boardState !== BoardState.Reading ? 'post-cursor-box' : 'hidden'}\n                    style={{\n                        left: this.props.boardState === BoardState.SelectingLocation ? this.state.mouse_X - 30 : this.state.newPost_X - 30,\n                        top: this.props.boardState === BoardState.SelectingLocation ? this.state.mouse_Y - 30 : this.state.newPost_Y - 30,\n                        backgroundColor: this.props.postColor\n                    }}>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}