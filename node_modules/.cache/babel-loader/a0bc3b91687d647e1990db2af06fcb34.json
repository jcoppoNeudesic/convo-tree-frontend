{"ast":null,"code":"/**\n * distance between two points\n */\nconst pointDistance = (x1, y1, x2, y2) => {\n  const sideA = x2 - x1;\n  const sideB = y2 - y1;\n  return Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n};\n/**\n * angle between two points in radians\n */\n\n\nconst pointAngleRadians = (x1, y1, x2, y2) => {\n  return Math.atan2(y2 - y1, x2 - x1);\n};\n/**\n * angle between two points in degrees\n */\n\n\nconst pointAngleDegrees = (x1, y1, x2, y2) => {\n  return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\n};\n\nconst methods = {\n  pointDistance,\n  pointAngleRadians,\n  pointAngleDegrees\n};\nexport default methods;","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Documents/Projects/Big-bulletin-board/big-bulletin-board-ts/src/utils/Geometry.ts"],"names":["pointDistance","x1","y1","x2","y2","sideA","sideB","Math","sqrt","pow","pointAngleRadians","atan2","pointAngleDegrees","PI","methods"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,aAAa,GAAG,CAACC,EAAD,EAAaC,EAAb,EAAyBC,EAAzB,EAAqCC,EAArC,KAA4D;AAC9E,QAAMC,KAAK,GAAGF,EAAE,GAAGF,EAAnB;AACA,QAAMK,KAAK,GAAGF,EAAE,GAAGF,EAAnB;AACA,SAAOK,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASJ,KAAT,EAAgB,CAAhB,IAAqBE,IAAI,CAACE,GAAL,CAASH,KAAT,EAAgB,CAAhB,CAA/B,CAAP;AACH,CAJD;AAMA;AACA;AACA;;;AACA,MAAMI,iBAAiB,GAAG,CAACT,EAAD,EAAaC,EAAb,EAAyBC,EAAzB,EAAqCC,EAArC,KAA4D;AAClF,SAAOG,IAAI,CAACI,KAAL,CAAWP,EAAE,GAAGF,EAAhB,EAAoBC,EAAE,GAAGF,EAAzB,CAAP;AACH,CAFD;AAIA;AACA;AACA;;;AACA,MAAMW,iBAAiB,GAAG,CAACX,EAAD,EAAaC,EAAb,EAAyBC,EAAzB,EAAqCC,EAArC,KAA4D;AAClF,SAAOG,IAAI,CAACI,KAAL,CAAWP,EAAE,GAAGF,EAAhB,EAAoBC,EAAE,GAAGF,EAAzB,IAA+B,GAA/B,GAAqCM,IAAI,CAACM,EAAjD;AACH,CAFD;;AAIA,MAAMC,OAAO,GAAG;AAAEd,EAAAA,aAAF;AAAiBU,EAAAA,iBAAjB;AAAoCE,EAAAA;AAApC,CAAhB;AACA,eAAeE,OAAf","sourcesContent":["/**\n * distance between two points\n */\nconst pointDistance = (x1: number, y1: number, x2: number, y2: number): number => {\n    const sideA = x2 - x1;\n    const sideB = y2 - y1;\n    return Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n}\n\n/**\n * angle between two points in radians\n */\nconst pointAngleRadians = (x1: number, y1: number, x2: number, y2: number): number => {\n    return Math.atan2(y2 - y1, x2 - x1);\n}\n\n/**\n * angle between two points in degrees\n */\nconst pointAngleDegrees = (x1: number, y1: number, x2: number, y2: number): number => {\n    return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\n}\n\nconst methods = { pointDistance, pointAngleRadians, pointAngleDegrees };\nexport default methods;"]},"metadata":{},"sourceType":"module"}