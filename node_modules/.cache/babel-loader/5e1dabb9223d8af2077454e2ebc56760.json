{"ast":null,"code":"var baseAPI='api';var postAPI={get:function get(){return new Promise(function(resolve,reject){fetch(\"/\".concat(baseAPI,\"/posts\")).then(function(result){return result.json();}).then(function(json){return resolve(json);}).catch(function(err){return reject(err);});});},create:function create(post){return new Promise(function(resolve,reject){fetch(\"/\".concat(baseAPI,\"/post\"),{method:'POST',body:JSON.stringify(post),headers:{Accept:'application/json','Content-Type':'application/json'}}).then(function(result){return result.json();}).then(function(json){return resolve(json);}).catch(function(err){return reject(err);});});}};export default postAPI;","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/services/PostsService.ts"],"names":["baseAPI","postAPI","get","Promise","resolve","reject","fetch","then","result","json","catch","err","create","post","method","body","JSON","stringify","headers","Accept"],"mappings":"AAEA,GAAMA,CAAAA,OAAO,CAAG,KAAhB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACZC,GADY,eACN,CACF,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCC,KAAK,YAAKN,OAAL,WAAL,CACKO,IADL,CACU,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,IAAP,EAAJ,EADhB,EAEKF,IAFL,CAEU,SAAAE,IAAI,QAAIL,CAAAA,OAAO,CAACK,IAAD,CAAX,EAFd,EAGKC,KAHL,CAGW,SAAAC,GAAG,QAAIN,CAAAA,MAAM,CAACM,GAAD,CAAV,EAHd,EAIH,CALM,CAAP,CAMH,CARW,CASZC,MATY,iBASLC,IATK,CASc,CACtB,MAAO,IAAIV,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCC,KAAK,YAAKN,OAAL,UAAqB,CACtBc,MAAM,CAAE,MADc,CAEtBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFgB,CAGtBK,OAAO,CAAE,CACLC,MAAM,CAAE,kBADH,CAEL,eAAgB,kBAFX,CAHa,CAArB,CAAL,CAQKZ,IARL,CAQU,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,IAAP,EAAJ,EARhB,EASKF,IATL,CASU,SAAAE,IAAI,QAAIL,CAAAA,OAAO,CAACK,IAAD,CAAX,EATd,EAUKC,KAVL,CAUW,SAAAC,GAAG,QAAIN,CAAAA,MAAM,CAACM,GAAD,CAAV,EAVd,EAWH,CAZM,CAAP,CAaH,CAvBW,CAAhB,CAyBA,cAAeV,CAAAA,OAAf","sourcesContent":["import PostRequest from \"../models/PostRequest\";\n\nconst baseAPI = 'api';\n\nconst postAPI = {\n    get() {\n        return new Promise((resolve, reject) => {\n            fetch(`/${baseAPI}/posts`)\n                .then(result => result.json())\n                .then(json => resolve(json))\n                .catch(err => reject(err));\n        });\n    },\n    create(post: PostRequest) {\n        return new Promise((resolve, reject) => {\n            fetch(`/${baseAPI}/post`, {\n                method: 'POST',\n                body: JSON.stringify(post),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(result => result.json())\n                .then(json => resolve(json))\n                .catch(err => reject(err));\n        });\n    }\n}\nexport default postAPI;"]},"metadata":{},"sourceType":"module"}