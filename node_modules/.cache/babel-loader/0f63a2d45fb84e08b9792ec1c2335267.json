{"ast":null,"code":"const baseAPI = 'http://localhost:8080/api';\nconst postAPI = {\n  get() {\n    return new Promise((resolve, reject) => {\n      fetch(`/${baseAPI}/posts`).then(result => result.json()).then(json => resolve(json)).catch(err => reject(err));\n    });\n  },\n\n  create(post) {\n    return new Promise((resolve, reject) => {\n      fetch(`/${baseAPI}/post`, {\n        method: 'POST',\n        body: JSON.stringify(post),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(result => result.json()).then(json => resolve(json)).catch(err => reject(err));\n    });\n  }\n\n};\nexport default postAPI;","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/postsAPI.js"],"names":["baseAPI","postAPI","get","Promise","resolve","reject","fetch","then","result","json","catch","err","create","post","method","body","JSON","stringify","headers","Accept"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAAhB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,GAAG,GAAG;AACF,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,KAAK,CAAE,IAAGN,OAAQ,QAAb,CAAL,CACKO,IADL,CACUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADpB,EAEKF,IAFL,CAEUE,IAAI,IAAIL,OAAO,CAACK,IAAD,CAFzB,EAGKC,KAHL,CAGWC,GAAG,IAAIN,MAAM,CAACM,GAAD,CAHxB;AAIH,KALM,CAAP;AAMH,GARW;;AASZC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,KAAK,CAAE,IAAGN,OAAQ,OAAb,EAAqB;AACtBc,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFgB;AAGtBK,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX;AAHa,OAArB,CAAL,CAQKZ,IARL,CAQUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EARpB,EASKF,IATL,CASUE,IAAI,IAAIL,OAAO,CAACK,IAAD,CATzB,EAUKC,KAVL,CAUWC,GAAG,IAAIN,MAAM,CAACM,GAAD,CAVxB;AAWH,KAZM,CAAP;AAaH;;AAvBW,CAAhB;AAyBA,eAAeV,OAAf","sourcesContent":["const baseAPI = 'http://localhost:8080/api';\n\nconst postAPI = {\n    get() {\n        return new Promise((resolve, reject) => {\n            fetch(`/${baseAPI}/posts`)\n                .then(result => result.json())\n                .then(json => resolve(json))\n                .catch(err => reject(err));\n        });\n    },\n    create(post) {\n        return new Promise((resolve, reject) => {\n            fetch(`/${baseAPI}/post`, {\n                method: 'POST',\n                body: JSON.stringify(post),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(result => result.json())\n                .then(json => resolve(json))\n                .catch(err => reject(err));\n        });\n    }\n}\nexport default postAPI;"]},"metadata":{},"sourceType":"module"}