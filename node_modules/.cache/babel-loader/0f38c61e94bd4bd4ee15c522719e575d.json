{"ast":null,"code":"/**\n * Takes time stamp number and returns formatted date. Example: \"5/14/2006 8:29 PM\". Year not displayed if it is the current year.\n */var formatDate=function formatDate(date){var dateObj=new Date(date);var month=dateObj.getUTCMonth()+1;//months from 1-12\nvar day=dateObj.getUTCDate();var year=dateObj.getUTCFullYear();var time=dateObj.toLocaleString('en-US',{hour:'numeric',minute:'numeric',hour12:true});var newDate=new Date();var shouldShowYear=newDate.getUTCFullYear()!==year?true:false;if(shouldShowYear){return month+\"/\"+day+'/'+year+' '+time;}return month+\"/\"+day+' '+time;};var dateMethods={formatDate:formatDate};export default dateMethods;","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/utils/Date.ts"],"names":["formatDate","date","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","time","toLocaleString","hour","minute","hour12","newDate","shouldShowYear","dateMethods"],"mappings":"AAAA;AACA;AACA,GACA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAA0B,CACzC,GAAMC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,IAAJ,CAASF,IAAT,CAAhB,CACA,GAAMG,CAAAA,KAAK,CAAGF,OAAO,CAACG,WAAR,GAAwB,CAAtC,CAAyC;AACzC,GAAMC,CAAAA,GAAG,CAAGJ,OAAO,CAACK,UAAR,EAAZ,CACA,GAAMC,CAAAA,IAAI,CAAGN,OAAO,CAACO,cAAR,EAAb,CACA,GAAMC,CAAAA,IAAI,CAAGR,OAAO,CAACS,cAAR,CAAuB,OAAvB,CAAgC,CAAEC,IAAI,CAAE,SAAR,CAAmBC,MAAM,CAAE,SAA3B,CAAsCC,MAAM,CAAE,IAA9C,CAAhC,CAAb,CACA,GAAMC,CAAAA,OAAO,CAAG,GAAIZ,CAAAA,IAAJ,EAAhB,CACA,GAAMa,CAAAA,cAAc,CAAGD,OAAO,CAACN,cAAR,KAA6BD,IAA7B,CAAoC,IAApC,CAA2C,KAAlE,CAEA,GAAIQ,cAAJ,CAAoB,CAChB,MAAOZ,CAAAA,KAAK,CAAG,GAAR,CAAcE,GAAd,CAAoB,GAApB,CAA0BE,IAA1B,CAAiC,GAAjC,CAAuCE,IAA9C,CACH,CACD,MAAON,CAAAA,KAAK,CAAG,GAAR,CAAcE,GAAd,CAAoB,GAApB,CAA0BI,IAAjC,CACH,CAbD,CAeA,GAAMO,CAAAA,WAAW,CAAG,CAAEjB,UAAU,CAAVA,UAAF,CAApB,CACA,cAAeiB,CAAAA,WAAf","sourcesContent":["/**\n * Takes time stamp number and returns formatted date. Example: \"5/14/2006 8:29 PM\". Year not displayed if it is the current year.\n */\nconst formatDate = (date: number): string => {\n    const dateObj = new Date(date);\n    const month = dateObj.getUTCMonth() + 1; //months from 1-12\n    const day = dateObj.getUTCDate();\n    const year = dateObj.getUTCFullYear();\n    const time = dateObj.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n    const newDate = new Date();\n    const shouldShowYear = newDate.getUTCFullYear() !== year ? true : false;\n\n    if (shouldShowYear) {\n        return month + \"/\" + day + '/' + year + ' ' + time;\n    }\n    return month + \"/\" + day + ' ' + time;\n}\n\nconst dateMethods = { formatDate };\nexport default dateMethods;"]},"metadata":{},"sourceType":"module"}