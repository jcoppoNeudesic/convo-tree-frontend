{"ast":null,"code":"const baseAPI = 'api';\nconst postAPI = {\n  get() {\n    return new Promise((resolve, reject) => {\n      fetch(`/${baseAPI}/posts`).then(result => {\n        result.json();\n      }).then(json => {\n        const posts = json.map(post => {\n          const newPost = {\n            id: post._id,\n            parentPostId: post.parentPostId || undefined,\n            user: post.user,\n            date: post.createdAt,\n            message: post.message,\n            color: post.color,\n            x: post.x,\n            y: post.y\n          };\n          return newPost;\n        });\n        resolve(posts);\n      }).catch(err => reject(err));\n    });\n  },\n\n  create(post) {\n    return new Promise((resolve, reject) => {\n      fetch(`/${baseAPI}/post`, {\n        method: 'POST',\n        body: JSON.stringify(post),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(result => result.json()).then(json => resolve(json)).catch(err => reject(err));\n    });\n  }\n\n};\nexport default postAPI;","map":{"version":3,"sources":["/Users/jayson.coppoNeudesic.com/Projects/Big-bulletin-board/big-bulletin-board-ts/src/services/PostsService.ts"],"names":["baseAPI","postAPI","get","Promise","resolve","reject","fetch","then","result","json","posts","map","post","newPost","id","_id","parentPostId","undefined","user","date","createdAt","message","color","x","y","catch","err","create","method","body","JSON","stringify","headers","Accept"],"mappings":"AAIA,MAAMA,OAAO,GAAG,KAAhB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,GAAG,GAAG;AACF,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,KAAK,CAAE,IAAGN,OAAQ,QAAb,CAAL,CACKO,IADL,CACUC,MAAM,IAAI;AAAEA,QAAAA,MAAM,CAACC,IAAP;AAAe,OADrC,EAEKF,IAFL,CAEWE,IAAD,IAAe;AACjB,cAAMC,KAAa,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAwB;AACnD,gBAAMC,OAAa,GAAG;AAClBC,YAAAA,EAAE,EAAEF,IAAI,CAACG,GADS;AAElBC,YAAAA,YAAY,EAAEJ,IAAI,CAACI,YAAL,IAAqBC,SAFjB;AAGlBC,YAAAA,IAAI,EAAEN,IAAI,CAACM,IAHO;AAIlBC,YAAAA,IAAI,EAAEP,IAAI,CAACQ,SAJO;AAKlBC,YAAAA,OAAO,EAAET,IAAI,CAACS,OALI;AAMlBC,YAAAA,KAAK,EAAEV,IAAI,CAACU,KANM;AAOlBC,YAAAA,CAAC,EAAEX,IAAI,CAACW,CAPU;AAQlBC,YAAAA,CAAC,EAAEZ,IAAI,CAACY;AARU,WAAtB;AAUA,iBAAOX,OAAP;AACH,SAZqB,CAAtB;AAaAT,QAAAA,OAAO,CAACM,KAAD,CAAP;AACH,OAjBL,EAkBKe,KAlBL,CAkBWC,GAAG,IAAIrB,MAAM,CAACqB,GAAD,CAlBxB;AAmBH,KApBM,CAAP;AAqBH,GAvBW;;AAwBZC,EAAAA,MAAM,CAACf,IAAD,EAAoB;AACtB,WAAO,IAAIT,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,KAAK,CAAE,IAAGN,OAAQ,OAAb,EAAqB;AACtB4B,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAf,CAFgB;AAGtBoB,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX;AAHa,OAArB,CAAL,CAQK1B,IARL,CAQUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EARpB,EASKF,IATL,CASUE,IAAI,IAAIL,OAAO,CAACK,IAAD,CATzB,EAUKgB,KAVL,CAUWC,GAAG,IAAIrB,MAAM,CAACqB,GAAD,CAVxB;AAWH,KAZM,CAAP;AAaH;;AAtCW,CAAhB;AAwCA,eAAezB,OAAf","sourcesContent":["import Post from \"../models/Post\";\nimport PostRequest from \"../models/PostRequest\";\nimport PostResponse from \"../models/PostResponse\";\n\nconst baseAPI = 'api';\n\nconst postAPI = {\n    get() {\n        return new Promise((resolve, reject) => {\n            fetch(`/${baseAPI}/posts`)\n                .then(result => { result.json() })\n                .then((json: any) => {\n                    const posts: Post[] = json.map((post: PostResponse) => {\n                        const newPost: Post = {\n                            id: post._id,\n                            parentPostId: post.parentPostId || undefined,\n                            user: post.user,\n                            date: post.createdAt,\n                            message: post.message,\n                            color: post.color,\n                            x: post.x,\n                            y: post.y\n                        }\n                        return newPost;\n                    })\n                    resolve(posts)\n                })\n                .catch(err => reject(err));\n        });\n    },\n    create(post: PostRequest) {\n        return new Promise((resolve, reject) => {\n            fetch(`/${baseAPI}/post`, {\n                method: 'POST',\n                body: JSON.stringify(post),\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(result => result.json())\n                .then(json => resolve(json))\n                .catch(err => reject(err));\n        });\n    }\n}\nexport default postAPI;"]},"metadata":{},"sourceType":"module"}